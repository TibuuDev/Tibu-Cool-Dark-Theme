{
	"name": "Tibu Dark Theme",
	"colors": {
		// colors/General
		"foreground":"#DAF2FF",
		"focusBorder":"#D5AC84af",
		"progressBar.background": "#89ddff",
		"selection.background": "#7F8E9E",
		"scrollbar.shadow": "#7e57c200",

		// colors/Activity Bar
		"activityBar.foreground": "#89ddff",
		"activityBar.background": "#1B1D22",
		"activityBar.inactiveForeground": "#C9E4FF7f",
		"activityBarBadge.foreground": "#1B1D22",
		"activityBarBadge.background": "#DBB78E",
		"activityBar.border": "#34383C",

		// colors/Side Bar
		"sideBar.background": "#1C1E23",
		"sideBar.foreground": "#DAF2FFbf",
		"sideBarSectionHeader.background": "#222429",
		"sideBarSectionHeader.foreground": "#89DDFF",
		"sideBarSectionHeader.border": "#34383C",
		"sideBarTitle.foreground": "#C9E4FFbf",
		"sideBar.border": "#34383C",
		"list.inactiveSelectionBackground": "#222429",
		"list.inactiveSelectionForeground": "#DAF2FF",
		"list.hoverBackground": "#D5AC84af",
		"list.hoverForeground": "#1C1E23",
		"list.activeSelectionBackground": "#D5AC84af",
		"list.activeSelectionForeground": "#1C1E23",
		"tree.indentGuidesStroke": "#89ddffaf",
		"tree.inactiveIndentGuidesStroke": "#D5AC8431",
		"list.dropBackground": "#D5AC84af",
		"list.highlightForeground": "#cccccc",
		"list.focusBackground": "#D5AC84af",
		"list.focusForeground": "#cfcfcf",
		"list.focusOutline": "#7A6754",
		"list.inactiveFocusOutline": "#89ddff00",
		

		// colors/Status Bar
		"statusBar.foreground": "#DAF2FFbf",
		"statusBar.background": "#1B1D22",
		"statusBar.border": "#34383C",
		"statusBar.debuggingBackground": "#cc3333",
		"statusBar.debuggingForeground": "#000",
		"statusBar.debuggingBorder": "#ffffff40",
		"statusBar.noFolderBackground": "#1B1D22",
		"statusBar.noFolderForeground": "#DAF2FFbf",
		"statusBar.noFolderBorder": "#34383C",
		"statusBarItem.remoteBackground": "#89ddff",
		"statusBarItem.remoteForeground": "#1B1D22",
		
		// colors/TitleBar
		"titleBar.activeBackground": "#1e1e1e",
		"titleBar.activeForeground": "#ffffff",
		"titleBar.border": "#89ddffaf",
		"titleBar.inactiveBackground": "#2a2a2a",
		"titleBar.inactiveForeground": "#cfcfcf",
		"menubar.selectionForeground": "#ffffff",
		"menubar.selectionBackground": "#383838",
		"menubar.selectionBorder": "#ff000000",
		"menu.foreground": "#ffffff",
		"menu.background": "#1e1e1e",
		"menu.selectionForeground": "#ffffff",
		"menu.selectionBackground": "#383838",
		"menu.selectionBorder": "#ff000000",
		"menu.separatorBackground": "#606060",
		"menu.border": "#383838",

		// colors/Buttons
		"button.background": "#FFA228",
		"button.foreground":"#1e1e1ef9",
		"button.hoverBackground":"#7e57c2",
		"button.secondaryForeground": "#fffffff9",
		"button.secondaryBackground": "#3a3d41",
		"button.secondaryHoverBackground": "#45494e",

		// colors/Inputs
		"input.background": "#3c3c3c",
		"input.border": "#383838",
		"input.foreground": "#DAF2FF",
		"input.placeholderForeground": "#DAF2FF",
		"inputOption.activeForeground": "#DAF2FF",
		"inputOption.activeBackground":"#DBB78E7f",
		"inputOption.activeBorder": "#DBB78E",
		"inputOption.hoverBackground": "default",

		// colors/Panel (Terminal)
		"panel.background": "#1D1F23",
		"panel.border": "#34383C",
		"panelTitle.activeBorder": "#2472c8",
		"panelTitle.activeForeground": "#ffffff",
		"panelTitle.inactiveForeground": "#DAF2FFbf",
		"terminalCursor.foreground": "#2472c8",
		"terminalCursor.background": "#ffffff",
		"badge.background": "#DBB78E",
		"badge.foreground": "#1d1f23",
		"terminal.border": "#34383C",
		"terminal.foreground": "#ffffff",
		"terminal.background": "#1D1F23",
		"terminal.ansiWhite": "#e5e5e5",
		"terminal.ansiBrightWhite": "#ffffff",
		"terminal.ansiBlack": "#000000",
		"terminal.ansiBrightBlack": "#666666",
		"terminal.ansiBlue": "#2472c8",
		"terminal.ansiBrightBlue": "#3b8eea",
		"terminal.ansiCyan": "#11a8cd",
		"terminal.ansiBrightCyan": "#29b8db",
		"terminal.ansiGreen": "#0dbc79",
		"terminal.ansiBrightGreen": "#23d18b",
		"terminal.ansiMagenta": "#bc3fbc",
		"terminal.ansiBrightMagenta": "#d670d6",
		"terminal.ansiRed": "#cd3131",
		"terminal.ansiBrightRed": "#f14c4c",
		"terminal.ansiYellow": "#e5e510",
		"terminal.ansiBrightYellow": "#f5f543",

		// colors/Tabs
		"editorGroupHeader.tabsBackground": "#1D1F23",
		"editorGroupHeader.border": "#34383C",
		"editorGroupHeader.noTabsBackground": "#1D1F23",
		"editorGroupHeader.tabsBorder": "#34383C",
		"editorGroup.emptyBackground": "#1D1F23",

		"tab.activeForeground": "#ffffff",
		"tab.border": "#383838",
		"tab.activeBackground": "#1B1D22",
		"tab.activeBorder": "#89ddff",
		"tab.activeBorderTop": "#89ddff",
		"tab.activeModifiedBorder": "#6edaa9",
		"tab.inactiveBackground": "#1D1F23",
		"tab.inactiveForeground": "#DAF2FF",
		"tab.hoverBackground": "#222429",
		"tab.hoverForeground": "#D2EBFF",
		"tab.hoverBorder": "#89DDFF",

		// colors/Breadcumb
		"breadcrumb.background": "#1d1f23",
		"breadcrumb.foreground": "#D2EBFF",
		"breadcrumb.focusForeground": "#ffffff",

		// colors/Scrollbar
		"scrollbarSlider.background": "#D5AC84df",
		"scrollbarSlider.activeBackground": "#D5AC84df",
		"scrollbarSlider.hoverBackground": "#D5AC84af",

		// colors/Widgets
		"widget.shadow": "#D5AC84af",
		"editorWidget.foreground": "#cccccc",
		"editorWidget.background": "#2a2a2a",
		"pickerGroup.border": "#D5AC84",
		"pickerGroup.foreground": "#D5AC84",
		"editorWidget.border": "#D5AC84",
		"editorWidget.resizeBorder": "#89ddff",
		"debugToolBar.background": "#2a2a2a",
		"debugToolBar.border": "default",

		// colors/Notifications
		"notifications.foreground": "#cccccc",
		"notifications.background": "#2a2a2a",
		"notificationToast.border": "default",
		"notificationsErrorIcon.foreground": "default",
		"notificationsWarningIcon.foreground": "default",
		"notificationsInfoIcon.foreground": "default",
		
		"notificationCenterHeader.foreground": "#cccccc",
		"notificationCenterHeader.background": "#2a2a2a",
		"notifications.border": "#D5AC84",
		"notificationCenter.border": "#D5AC84",

		// colors/Git Decorations
		"gitDecoration.addedResourceForeground": "default",
		"gitDecoration.conflictingResourceForeground": "default",
		"gitDecoration.deletedResourceForeground": "default",
		"gitDecoration.ignoredResourceForeground": "default",
		"gitDecoration.modifiedResourceForeground": "default",
		"gitDecoration.stageDeletedResourceForeground": "default",
		"gitDecoration.stageModifiedResourceForeground": "default",
		"gitDecoration.submoduleResourceForeground": "default",
		"gitDecoration.untrackedResourceForeground": "default",
		"gitDecoration.renamedResourceForeground": "default",

		// editor/Editor
		"editor.background": "#1D1F23",

		"editorLineNumber.foreground": "#4A4F55",
		"editorLineNumber.activeForeground": "#ffffff",


		"editorCursor.foreground": "#ffd700cf",
		"editorCursor.background": "#1C1E23",

		"editor.selectionBackground": "#4a4a4a66",
		"editor.inactiveSelectionBackground": "#4a4a4a44",
		"editorWhitespace.foreground": "#262626",
		"editor.selectionHighlightBackground": "#a6a6a65f",
		"editor.selectionHighlightBorder": "#00000000",

		"editor.findMatchBackground": "#ff7f5055",
		"editor.findMatchBorder": "#ff7f5033",
		"editor.findMatchHighlightBackground": "#ff7f5033",
		"editor.findMatchHighlightBorder": "#ffffff0c",
		"editor.findRangeHighlightBackground": "#2a2a2acc",
		"editor.findRangeHighlightBorder": "#f2f2f200",
		"editor.rangeHighlightBackground": "#2a2a2a44",
		"editor.rangeHighlightBorder": "#f96f6f0b",

		"editor.hoverHighlightBackground": "#38383866",
		"editor.wordHighlightStrongBackground": "#26262620",
		"editor.wordHighlightStrongBorder": "#575757b8",
		"editor.wordHighlightBackground": "#38383800",
		"editor.wordHighlightBorder": "#575757b8",

		"editor.lineHighlightBackground": "#2C2F327f",
		"editor.lineHighlightBorder": "#2C2F32",

		"editorLink.activeForeground": "#7e57c2",

		"editorIndentGuide.background": "default",
		"editorIndentGuide.activeBackground": "default",
		"editorRuler.foreground": "#89DDFF7f",

		"editorBracketMatch.background": "#262626",
		"editorBracketMatch.border": "#383838",

		"editor.foldBackground": "#26282B4f",

		"editorOverviewRuler.background": "default",
		"editorOverviewRuler.border": "default",

		"editorError.foreground": "#ff4620",
		"editorError.background": "default",
		"editorError.border": "default",

		"editorWarning.foreground": "default",
		"editorWarning.background": "default",
		"editorWarning.border": "default",

		"editorInfo.foreground": "#5186b6",
		"editorInfo.background": "default",
		"editorInfo.border": "default",

		"editorStickyScroll.background": "default",
		"editorStickyScroll.border": "#34383C",
		"editorGutter.background": "#1D1F23",
		"editorGutter.modifiedBackground": "#3b93db7f",
		"editorGutter.addedBackground": "#1cf2157f",
		"editorGutter.deletedBackground": "#d30c157f",
		"editorGutter.foldingControlForeground": "#cbc4c4",
		"editorCodeLens.foreground":"#9ea19c9b",
		"editorGroup.border":"#34383C",

		// editor/Diff Editor
		"diffEditor.insertedTextBackground": "#3b93db24",
		"diffEditor.insertedTextBorder": "#3b93db47",
		"diffEditor.removedTextBackground": "#ff4e4e24",
		"diffEditor.removedTextBorder": "#8a414147",
		"diffEditor.border": "#34383C",

		// editor/Marker Navigation
		"editorMarkerNavigation.background": "#222429",
		"editorMarkerNavigationError.background": "#ff4620",
		"editorMarkerNavigationWarning.background": "default",
		"editorMarkerNavigationInfo.background": "#5186b6",

		// editor/Merge Conflicts
		"merge.currentHeaderBackground":"#37178e",
		"merge.currentContentBackground": "#395f8f",
		"merge.incomingContentBackground": "#0193c3",
		"merge.incomingHeaderBackground": "#114a56",
		"merge.commonContentBackground": "#383838",
		"merge.commonHeaderBackground": "#282828",
		"merge.border": "#383838",

		// editor/Suggest Widget
		"editorSuggestWidget.background": "#1e1e1e",
		"editorSuggestWidget.border": "#383838",
		"editorSuggestWidget.foreground": "#ffffff",
		"editorSuggestWidget.highlightForeground": "#cfcfcf",
		"editorSuggestWidget.selectedBackground":"#D5AC84af",
		
		// editor/ Hover Widget
		"editorHoverWidget.foreground": "#cccccc",
		"editorHoverWidget.background": "#1e1e1e",
		"editorHoverWidget.border": "default",

		// editor/ Peek View Editor
		"peekView.border": "#383838",
		"peekViewEditor.background": "#1D1F23",
		"peekViewEditorGutter.background": "#1D1F23",
		"peekViewEditor.matchHighlightBackground": "#4a4a4a5f",
		"peekViewEditor.matchHighlightBorder": "#ff7f5033",
		"peekViewResult.background":"#26282B",
		"peekViewResult.fileForeground": "#ffffff",
		"peekViewResult.lineForeground": "#cfcfcf",
		"peekViewResult.matchHighlightBackground": "#4a4a4a",
		"peekViewResult.selectionBackground": "#262626",
		"peekViewResult.selectionForeground": "#a6a6a6",
		"peekViewTitle.background": "#2C2F32",
		"peekViewTitleDescription.foreground": "#cfcfcf",
		"peekViewTitleLabel.foreground": "#ffffff",

		// syntax/syntax
		"editor.foreground": "#eefdff",
		"editorBracketHighlight.foreground1": "#ffd700",		
		"editorBracketHighlight.foreground2": "#89DDFF",
		"editorBracketHighlight.foreground3": "#017ACE",

		//Error Warning foregroung color
		"list.errorForeground": "#ff5230",
		"errorLens.errorBackground": "default",
		"list.warningForeground": "default",
		"errorLens.warningBackground": "default",
		"errorLens.warningForeground": "default",
	},
	"tokenColors": [

		// HTML syntax color
		{
			"name": "HTML - Opening and Closing tags",
			"scope": [
				"punctuation.definition.tag.begin.html",
				"punctuation.definition.tag.end.html",
				"punctuation.separator.key-value.html",
				"punctuation.definition.string.begin.html",
				"punctuation.definition.string.end.html"
			],
			"settings": {
				"foreground": "#89DDFF",
			}
		},
		{
			"name": "HTML - Tags",
			"scope": [
				"entity.name.tag.html",
				"meta.tag.sgml",
			],
			"settings": {
				"foreground": "#FF5151"
			}
		},
		{
			"name": "HTML - Attribute Name",
			"scope": "entity.other.attribute-name.html",
			"settings": {
				"foreground": "#FFCB6B",
			}
		},
		{
			"name": "HTML - Attribute Values",
			"scope": "text.html.derivative meta.attribute string.quoted",
			"settings": {
				"foreground": "#C3E88D",
			}
		},
		
		// CSS syntax color
		{
			"name": "CSS, Element Selector",
			"scope": "source.css entity.name.tag",
			"settings": {
				"foreground": "#89DDFF",
			}
		},
		{
			"name": "CSS, Class Selector",
			"scope": "source.css entity.other.attribute-name.class",
			"settings": {
				"foreground": "#017ACE",
			}
		},
		{
			"name": "CSS, Id Selector, Keywords: Media, Keyframes ",
			"scope": [
				"source.css entity.other.attribute-name.id",
				"source.css keyword.control.at-rule"
			],
			"settings": {
				"foreground": "#00C79F",
			}
		},
		{
			"name": "CSS, Pseudo-Class Selector",
			"scope": "source.css entity.other.attribute-name.pseudo-class",
			"settings": {
				"foreground": "#CF6FCF",
			}
		},
		{
			"name": "CSS, Pseudo-Element Selector",
			"scope": "source.css entity.other.attribute-name.pseudo-element",
			"settings": {
				"foreground": "#94D0D2",
			}
		},
		{
			"name": "CSS, Properties declaration",
			"scope": "source.css support.type.property-name",
			"settings": {
				"foreground": "#EAD5AA",
			}
		},
		{
			"name": "CSS, Vendored Properties declaration (-webkit...)",
			"scope": [
				"source.css support.type.vendored.property-name",
				"source.css support.constant.vendored.property-value"
			],
			"settings": {
				"foreground": "#D5AC84",
			}
		},
		{
			"name": "CSS, Property Numeric Values and Hashtags",
			"scope": [
				"source.css constant.numeric",
				"source.css constant.other.color.rgb-value punctuation.definition.constant"
			],
			"settings": {
				"foreground": "#F78C6C",
			}
		},
		{
			"name": "CSS, Property Values Unit Keyword and Color Constants",
			"scope": [
				"source.css keyword.other.unit",
				"source.css constant.other.color"
			],
			"settings": {
				"foreground": "#FFEB95",
			}
		},
		{
			"name": "CSS, Constant Properties Values (auto)",
			"scope": [
				"source.css support.constant.property-value",
				"source.css support.function"
			],
			"settings": {
				"foreground": "#8DE794",
			}
		},
		{
			"name": "CSS, Keyframes variable name",
			"scope": "source.css variable.parameter.keyframe-list",
			"settings": {
				"foreground": "#A5D4A0",
			}
		},

		// README-MARKDOWN syntax color
		{
			"name": "MD, Heading 1",
			"scope": "text.html.markdown heading.1",
			"settings": {
				"foreground": "#89DDFF",
			}
		},
		{
			"name": "MD, Heading 2",
			"scope": "text.html.markdown heading.2",
			"settings": {
				"foreground": "#017ACE",
			}
		},
		{
			"name": "MD, Heading 3-6",
			"scope": "text.html.markdown heading",
			"settings": {
				"foreground": "#00C79F",
			}
		},
		{
			"name": "MD, Inline Raws",
			"scope": "text.html.markdown markup.inline.raw",
			"settings": {
				"foreground": "#FFFDD0",
			}
		},
		{
			"name": "MD, Links",
			"scope": "text.html.markdown markup.underline.link",
			"settings": {
				"foreground": "#D5AC84",
			}
		},
		{
			"name": "MD, bold",
			"scope": "text.html.markdown markup.bold",
			"settings": {
				"foreground": "#FFA228",
				"fontStyle": "bold"
			}
		},

		// JSON syntax color
		{
			"name": "JSON, Properties Name",
			"scope": "source.json support.type.property-name",
			"settings": {
				"foreground": "#017ACE",
			}
		},
		{
			"name": "JSON, Properties string values",
			"scope": "source.json meta.structure.dictionary.value string.quoted.double",
			"settings": {
				"foreground": "#FFFDD0",
			}
		},
		{
			"name": "JSON, Properties Numeric Values",
			"scope": "source.json constant.numeric",
			"settings": {
				"foreground": "#FFA228",
			}
		},
		{
			"name": "JSON, Properties boolean - true value",
			"scope": "source.json constant.language.json",
			"settings": {
				"foreground": "#00C79F",
			}
		},

		// JS & TS syntax color
		// Import statements colors
		{
			"name": "JS TS, Import From keywords",
			"scope": [
				"keyword.control.import.js",
				"keyword.control.from.js",
				"keyword.control.import.ts",
				"keyword.control.from.ts",
			],
			"settings": {
				"foreground": "#89DDFF",
			}
		},
		{
			"name": "JS TS, Imported default elements",
			"scope": [
				"meta.import.js variable.other.readwrite",
				"meta.import.ts variable.other.readwrite"
			],
			"settings": {
				"foreground": "#FFFDD0",
			}
		},
		{
			"name": "JS TS, Imported destructured element",
			"scope": [
				"source.js meta.block variable.other.readwrite.alias",
				"source.ts meta.block variable.other.readwrite.alias"
			],
			"settings": {
				"foreground": "#94d0d2",
			}
		},
		{
			"name": "JS TS, Import Path",
			"scope": [
				"meta.import.js string.quoted.single",
				"meta.import.js punctuation.definition.string.begin",
				"meta.import.js punctuation.definition.string.end",
				"meta.import.ts string.quoted.single",
				"meta.import.ts punctuation.definition.string.begin",
				"meta.import.ts punctuation.definition.string.end"
			],
			"settings": {
				"foreground": "#D5AC84",
			}
		},


		// Characters, keywords, storages
		{
			"name": "JS TS, Single string characters, assignment operator keyword and (semi, commas, arrows...)",
			"scope": [
				"punctuation.definition.string",
				"keyword.operator",
				"punctuation.terminator",
				"punctuation.separator",
				"punctuation.accessor",
				"storage.type.function.arrow.js",
				"storage.type.function.arrow.ts",
			],
			"settings": {
				"foreground": "#89DDFF",
			},
		},
		{
			"name": "JS TS, other characters",
			"scope": [
				"source.js punctuation.definition.template-expression",
				"source.ts punctuation.definition.template-expression"
			],
			"settings": {
				"foreground": "#017ACE",
			}
		},
		{
			"name": "JS TS, Keyword operator new (new)",
			"scope": [
				"keyword.operator.new.js",
				"keyword.operator.new.ts"
			],
			"settings": {
				"foreground": "#F39652",
			}
		},
		{
			"name": "JS TS, main keywords (export, default, return)",
			"scope": [
				"keyword.control.export.js",
				"keyword.control.default.js",
				"keyword.control.flow.js",
				"keyword.control.export.ts",
				"keyword.control.default.ts",
				"keyword.control.flow.ts",
			],
			"settings": {
				"foreground": "#89DDFF",
			}
		},
		{
			"name": "JS TS, Storage declarators modifiers (const, function, async & await )",
			"scope": [
				"storage.type.js",
				"storage.type.function.js",
				"storage.type.ts",
				"storage.type.function.ts",
			],
			"settings": {
				"foreground": "#017ACE",
			}
		},
		{
			"name": "JS TS, keyword conditional statements",
			"scope": [
				"keyword.control.conditional.js",
				"keyword.control.conditional.ts"
			],
			"settings": {
				"foreground": "#017ACE",
			}
		},
		{
			"name": "JS TS, Storage asynchronal modifiers (async & await)",
			"scope": [
				"meta.var.expr.js keyword.control.flow",
				"storage.modifier.async.js",
				"meta.var.expr.ts keyword.control.flow",
				"storage.modifier.async.ts",
			],
			"settings": {
				"foreground": "#89DDFF",
			}
		},
		{
			"name": "JS TS, Try-Catch keyword control (try, catch, throw...)",
			"scope": [
				"keyword.control.trycatch.js",
				"keyword.control.trycatch.ts"
			],
			"settings": {
				"foreground": "#89DDFF",
			}
		},
		{
			"name": "JS TS, constant and variable name definition",
			"scope": [
				"meta.definition.variable.js variable.other.constant.js",
				"meta.definition.variable.js variable.other.readwrite.js",
				"meta.definition.variable.ts variable.other.constant.ts",
				"meta.definition.variable.ts variable.other.readwrite.ts"
			],
			"settings": {
				"foreground": "#FFFDD0",
			}
		},
		{
			"name": "JS TS, constant and variable name invoked outblock",
			"scope": [
				"variable.other.readwrite.js",
				"variable.other.object.js",
				"variable.other.readwrite.ts",
				"variable.other.object.ts"
			],
			"settings": {
				"foreground": "#FFFDD0",
			}
		},
		{
			"name": "JS TS, constant and variable name invoked inblock",
			"scope": [
				"meta.block.js variable.other.readwrite.js",
				"meta.block.ts variable.other.readwrite.ts"
			],
			"settings": {
				"foreground": "#FFFDD0",
			}
		},
		{
			"name": "JS TS, Function and Arrow Function definition",
			"scope": [
				"meta.definition.function.js",
				"variable.other.constant.js entity.name.function.js",
				"meta.definition.function.ts",
				"variable.other.constant.ts entity.name.function.ts"
			],
			"settings": {
				"foreground": "#D5AC84",
			}
		},
		{
			"name": "JS TS, function destructured variables parameter",
			"scope": [
				"meta.parameter.object-binding-pattern.js variable.parameter.js",
				"meta.parameter.object-binding-pattern.ts variable.parameter.ts"
			],
			"settings": {
				"foreground": "#94d0d2",
			}
		},
		{
			"name": "JS TS, Function parameters",
			"scope": [
				"meta.parameters.js variable.parameter.js",
				"meta.parameters.ts variable.parameter.ts"
			],
			"settings": {
				"foreground": "#CF6FCF",
			}
		},
		{
			"name": "JS TS, Object keys name",
			"scope": [
				"meta.object-literal.key.js",
				"meta.object-literal.key.ts"
			],
			"settings": {
				"foreground": "#EAD5AA",
			}
		},
		{
			"name": "JS TS, Object keys name (if its a function)",
			"scope": [
				"meta.object-literal.key.js entity.name.function.js",
				"meta.object-literal.key.ts entity.name.function.ts"
			],
			"settings": {
				"foreground": "#D5AC84",
			}
		},
		{
			"name": "JS TS, Object colon separator key-value",
			"scope": [
				"meta.object-literal.key.js punctuation.separator.key-value.js",
				"meta.object-literal.key.ts punctuation.separator.key-value.ts"
			],
			"settings": {
				"foreground": "#89DDFF",
			}
		},
		{
			"name": "JS TS, object property value 1",
			"scope": [
				"meta.object.member.js variable.other.readwrite.js",
				"meta.object.member.ts variable.other.readwrite.ts"
			],
			"settings": {
				"foreground": "#CF6FCF",
			}
		},
		{
			"name": "JS TS, object property value 2",
			"scope": [
				"meta.object.member.js variable.other.property.js",
				"variable.other.property.js",
				"meta.object.member.ts variable.other.property.ts",
				"meta.object.member.ts variable.other.property.ts"
			],
			"settings": {
				"foreground": "#A5D4A0",
			}
		},
		{
			"name": "JS TS, object property value 3",
			"scope": [
				"meta.object.member.js variable.other.object.property.js",
				"variable.other.object.property.js",
				"meta.object.member.ts variable.other.object.property.ts",
				"variable.other.object.property.ts"
			],
			"settings": {
				"foreground": "#8DE794",
			}
		},
		{
			"name": "JS TS, array value 1",
			"scope": [
				"meta.array.literal.js variable.other.object.js",
				"meta.array.literal.ts variable.other.object.ts"
			],
			"settings": {
				"foreground": "#CF6FCF",
			}
		},
		{
			"name": "JS TS, array value 2",
			"scope": [
				"meta.array.literal.js variable.other.property.js",
				"meta.array.literal.ts variable.other.property.ts"
			],
			"settings": {
				"foreground": "#E7B6D0",
			}
		},
		{
			"name": "JS TS, array value 3",
			"scope": [
				"meta.array.literal.js variable.other.object.property.js",
				"meta.array.literal.ts variable.other.object.property.ts"
			],
			"settings": {
				"foreground": "#DB93D0",
			}
		},
		{
			"name": "JS TS, Special Functions (React hooks...)",
			"scope": [
				"meta.function-call.js",
				"meta.function-call.ts"
			],
			"settings": {
				"foreground": "#00C79F",
				// "fontStyle": "bold"
			}
		},

		// Data types (Number, String...) and Clases (String, Error...)
		{
			"name": "JS TS, Template literal embedded expression 1",
			"scope": [
				"meta.template.expression.js meta.embedded.line.js",
				"meta.template.expression.ts meta.embedded.line.ts"
			],
			"settings": {
				"foreground": "#94D0D2",
			}
		},
		{
			"name": "JS TS, Template literal embedded expression 2",
			"scope": [
				"meta.template.expression.js meta.embedded.line.js variable.other.object.js",
				"meta.template.expression.ts meta.embedded.line.ts variable.other.object.ts"
			],
			"settings": {
				"foreground": "#94D0D2",
			}
		},
		{
			"name": "JS TS, boolean - true",
			"scope": [
				"constant.language.boolean.true.js",
				"constant.language.boolean.true.ts"
			],
			"settings": {
				"foreground": "#46cb18",
			}
		},
		{
			"name": "JS TS, boolean - false",
			"scope": [
				"constant.language.boolean.false.js",
				"constant.language.boolean.false.ts"
			],
			"settings": {
				"foreground": "#ED3232",
			}
		},
		{
			"name": "JS TS, null & undefined",
			"scope": [
				"constant.language.undefined.js",
				"constant.language.null.js",
				"constant.language.undefined.ts",
				"constant.language.null.ts",
			],
			"settings": {
				"foreground": "#FF5151",
			}
		},
		{
			"name": "JS JSX, numbers",
			"scope": "constant.numeric",
			"settings": {
				"foreground": "#ffd155",
			}
		},

		//JSX & TSX syntax color
		// Import statements colors
		{
			"name": "JSX TSX, Import From keywords",
			"scope": [
				"keyword.control.import.js.jsx",
				"keyword.control.from.js.jsx",
				"keyword.control.import.tsx",
				"keyword.control.from.tsx",
			],
			"settings": {
				"foreground": "#89DDFF",
			}
		},
		{
			"name": "JSX, Imported default elements",
			"scope": [
				"meta.import.js.jsx variable.other.readwrite",
				"meta.import.tsx variable.other.readwrite"
			],
			"settings": {
				"foreground": "#FFFDD0",
			}
		},
		{
			"name": "JSX TSX, Imported destructured element",
			"scope": [
				"source.js.jsx meta.block variable.other.readwrite.alias",
				"source.tsx meta.block variable.other.readwrite.alias"
			],
			"settings": {
				"foreground": "#94d0d2",
			}
		},
		{
			"name": "JSX TSX, Import Path",
			"scope": [
				"meta.import.js.jsx string.quoted.single",
				"meta.import.js.jsx punctuation.definition.string.begin",
				"meta.import.js.jsx punctuation.definition.string.end",
				"meta.import.tsx string.quoted.single",
				"meta.import.tsx punctuation.definition.string.begin",
				"meta.import.tsx punctuation.definition.string.end"
			],
			"settings": {
				"foreground": "#D5AC84",
			}
		},

		// Characters, keywords, storages
		{
			"name": "JSX TSX, Single string characters, operators keyword and (semi, commas, arrows...)",
			"scope": [
				"punctuation.definition.string",
				"keyword.operator",
				"keyword.control",
				"punctuation.terminator",
				"punctuation.separator",
				"punctuation.accessor",
				"storage.type.function.arrow.js.jsx",
				"storage.type.function.arrow.tsx",
			],
			"settings": {
				"foreground": "#89DDFF",
			},
		},
		{
			"name": "JSX TSX, Keyword operator new (new)",
			"scope": [
				"keyword.operator.new.js.jsx",
				"keyword.operator.new.tsx"
			],
			"settings": {
				"foreground": "#F39652",
			}
		},
		{
			"name": "JSX TSX, main keywords (export, default, return)",
			"scope": [
				"keyword.control.export.js.jsx",
				"keyword.control.default.js.jsx",
				"keyword.control.flow.js.jsx",
				"keyword.control.export.tsx",
				"keyword.control.default.tsx",
				"keyword.control.flow.tsx",
			],
			"settings": {
				"foreground": "#89DDFF",
			}
		},
		{
			"name": "JSX TSX, Storage declarators modifiers (const, function, async & await )",
			"scope": [
				"storage.type.js.jsx",
				"storage.type.function.js.jsx",
				"storage.type.tsx",
				"storage.type.function.tsx",
			],
			"settings": {
				"foreground": "#017ACE",
			}
		},
		{
			"name": "JSX TSX, keyword conditional statements",
			"scope": [
				"keyword.control.conditional.js.jsx",
				"keyword.control.conditional.tsx"
			],
			"settings": {
				"foreground": "#017ACE",
			}
		},
		{
			"name": "JSX TSX, Storage asynchronal modifiers (async & await)",
			"scope": [
				"meta.var.expr.js.jsx keyword.control.flow.js.jsx",
				"storage.modifier.async.js.jsx",
				"meta.var.expr.tsx keyword.control.flow",
				"storage.modifier.async.tsx"
			],
			"settings": {
				"foreground": "#89DDFF",
			}
		},
		{
			"name": "JSX TSX, Try-Catch keyword control (try, catch, throw...)",
			"scope": [
				"keyword.control.trycatch.js.jsx",
				"keyword.control.trycatch.tsx"
			],
			"settings": {
				"foreground": "#89DDFF",
			}
		},
		{
			"name": "JSX TSX, constant and variable name definition",
			"scope": [
				"meta.definition.variable.js.jsx variable.other.constant.js.jsx",
				"meta.definition.variable.js.jsx variable.other.readwrite.js.jsx",
				"meta.definition.variable.tsx variable.other.constant.tsx",
				"meta.definition.variable.tsx variable.other.readwrite.tsx"
			],
			"settings": {
				"foreground": "#FFFDD0",
			}
		},
		{
			"name": "JSX TSX, constant and variable name invoked outblock",
			"scope": [
				"variable.other.readwrite.js.jsx",
				"variable.other.object.js.jsx",
				"variable.other.readwrite.tsx",
				"variable.other.object.tsx"
			],
			"settings": {
				"foreground": "#FFFDD0",
			}
		},
		{
			"name": "JSX TSX, constant and variable name invoked inblock",
			"scope": [
				"meta.block.js.jsx variable.other.readwrite.js.jsx",
				"meta.block.tsx variable.other.readwrite.tsx"
			],
			"settings": {
				"foreground": "#FFFDD0",
			}
		},
		{
			"name": "JSX TSX, Function and Arrow Function definition",
			"scope": [
				"meta.definition.function.js.jsx",
				"variable.other.constant.js.jsx entity.name.function.js.jsx",
				"meta.definition.function.tsx",
				"variable.other.constant.tsx entity.name.function.tsx"
			],
			"settings": {
				"foreground": "#D5AC84",
			}
		},
		{
			"name": "JSX TSX, function destructured variables parameter",
			"scope": [
				"meta.parameter.object-binding-pattern.js.jsx variable.parameter.js.jsx",
				"meta.parameter.object-binding-pattern.tsx variable.parameter.tsx"
			],
			"settings": {
				"foreground": "#94d0d2",
			}
		},
		{
			"name": "JSX TSX, Function parameters",
			"scope": [
				"meta.parameters.js.jsx variable.parameter.js.jsx",
				"meta.parameters.tsx variable.parameter.tsx"
			],
			"settings": {
				"foreground": "#CF6FCF",
			}
		},
		{
			"name": "JSX TSX, Object keys name",
			"scope": [
				"meta.object-literal.key.js.jsx",
				"meta.object-literal.key.tsx"
			],
			"settings": {
				"foreground": "#EAD5AA",
			}
		},
		{
			"name": "JSX TSX, Object keys name (if its a function)",
			"scope": [
				"meta.object-literal.key.js.jsx entity.name.function.js.jsx",
				"meta.object-literal.key.tsx entity.name.function.tsx"
			],
			"settings": {
				"foreground": "#D5AC84",
			}
		},
		{
			"name": "JSX TSX, Object colon separator key-value",
			"scope": [
			"meta.object-literal.key.js.jsx punctuation.separator.key-value.js.jsx",
			"meta.object-literal.key.tsx punctuation.separator.key-value.tsx"
		],
			"settings": {
				"foreground": "#89DDFF",
			}
		},
		{
			"name": "JSX TSX, object property value 1",
			"scope": [
				"meta.object.member.js.jsx variable.other.readwrite.js.jsx",
				"meta.object.member.tsx variable.other.readwrite.tsx"
			],
			"settings": {
				"foreground": "#CF6FCF",
			}
		},
		{
			"name": "JSX TSX, object property value 2",
			"scope": [
				"meta.object.member.js.jsx variable.other.property.js.jsx",
				"variable.other.property.js.jsx",
				"meta.object.member.tsx variable.other.property.tsx",
				"variable.other.property.tsx"
			],
			"settings": {
				"foreground": "#A5D4A0",
			}
		},
		{
			"name": "JSX TSX object property value 3",
			"scope": [
				"meta.object.member.js.jsx variable.other.object.property.js.jsx",
				"variable.other.object.property.js.jsx",
				"meta.object.member.tsx variable.other.object.property.tsx",
				"variable.other.object.property.tsx"
			],
			"settings": {
				"foreground": "#8DE794",
			}
		},
		{
			"name": "JSX TSX, array value 1",
			"scope": [
				"meta.array.literal.js.jsx variable.other.object.js.jsx",
				"meta.array.literal.tsx variable.other.object.tsx"
			],
			"settings": {
				"foreground": "#CF6FCF",
			}
		},
		{
			"name": "JSX TSX, array value 2",
			"scope": [
				"meta.array.literal.js.jsx variable.other.property.js.jsx",
				"meta.array.literal.tsx variable.other.property.tsx"
			],
			"settings": {
				"foreground": "#E7B6D0",
			}
		},
		{
			"name": "JSX TSX, array value 3",
			"scope": [
				"meta.array.literal.js.jsx variable.other.object.property.js.jsx",
				"meta.array.literal.tsx variable.other.object.property.tsx"
			],
			"settings": {
				"foreground": "#DB93D0",
			}
		},
		{
			"name": "JSX, Special Functions (React hooks...)",
			"scope": [
				"meta.function-call.js.jsx",
				"meta.function-call.tsx"
			],
			"settings": {
				"foreground": "#00C79F",
				// "fontStyle": "bold"
			}
		},

		// Data types (Number, String...) and Clases (String, Error...)
		{
			"name": "JSX TSX, Template literal embedded expression 1",
			"scope": [
				"meta.template.expression.js.jsx meta.embedded.line.js.jsx",
				"meta.template.expression.tsx meta.embedded.line.tsx"
			],
			"settings": {
				"foreground": "#94D0D2",
			}
		},
		{
			"name": "JSX TSX, Template literal embedded expression 2",
			"scope": [
				"meta.template.expression.js.jsx meta.embedded.line.js.jsx variable.other.object.js.jsx",
				"meta.template.expression.tsx meta.embedded.line.tsx variable.other.object.tsx"
			],
			"settings": {
				"foreground": "#94D0D2",
			}
		},
		{
			"name": "JSX TSX, boolean - true",
			"scope": [
				"constant.language.boolean.true.js.jsx",
				"constant.language.boolean.true.tsx"
			],
			"settings": {
				"foreground": "#46cb18",
			}
		},
		{
			"name": "JSX TSX, boolean - false",
			"scope": [
				"constant.language.boolean.false.js.jsx",
				"constant.language.boolean.false.tsx"
			],
			"settings": {
				"foreground": "#ED3232",
			}
		},
		{
			"name": "JSX TSX, null & undefined",
			"scope": [
				"constant.language.undefined.js.jsx",
				"constant.language.null.js.jsx",
				"constant.language.undefined.tsx",
				"constant.language.null.tsx",
			],
			"settings": {
				"foreground": "#FF5151",
			}
		},
		{
			"name": "JSX, numbers",
			"scope": [
				"source.js.jsx constant.numeric",
				"source.tsx constant.numeric"
			],
			"settings": {
				"foreground": "#ffd155",
			}
		},

		// HTML in JSX/TSX

		{
			"name": "HTML in JSX/TSX- Opening and Closing tags",
			"scope": [
				"punctuation.definition.tag.begin.js.jsx",
				"punctuation.definition.tag.end.js.jsx",
				"punctuation.separator.key-value.js.jsx",
				"punctuation.definition.tag.begin.tsx",
				"punctuation.definition.tag.end.tsx",
				"punctuation.separator.key-value.tsx",
			],
			"settings": {
				"foreground": "#89DDFF",
			}
		},
		{
			"name": "HTML in JSX/TSX - Tags",
			"scope": [
				"entity.name.tag.js.jsx",
				"entity.name.tag.tsx",
				"meta.tag.sgml",
			],
			"settings": {
				"foreground": "#FF5151"
			}
		},
		{
			"name": "HTML in JSX/TSX - Attribute Name",
			"scope": [
				"entity.other.attribute-name.js.jsx",
				"entity.other.attribute-name.tsx"
			],
			"settings": {
				"foreground": "#FFCB6B",
			}
		},
		{
			"name": "HTML in JSX - Attribute Values",
			"scope": [
				"meta.tag.attributes.js.jsx string.quoted",
				"meta.tag.attributes.tsx string.quoted"
			],
			"settings": {
				"foreground": "#C3E88D",
			}
		},

		// TS/TSX types syntax color
		{
			"name": "Type/Interface Keyword",
			"scope": "storage.type",
			"settings": {
				"foreground": "#017ACE",
			}
		},
		{
			"name": "Type/Interface Name",
			"scope": "source.ts entity.name.type",
			"settings": {
				"foreground": "#FFA228",
			}
		},
		{
			"name": "storage modifiers (extends...)",
			"scope": "source.ts storage.modifier",
			"settings": {
				"foreground": "#89DDFF",
			}
		},
		{
			"name": "Inherited class/type",
			"scope": "source.ts entity.other.inherited-class",
			"settings": {
				"foreground": "#E2795A",
			}
		},
		{
			"name": "Interface keys",
			"scope": [
				"source.ts variable.object.property",
				"source.ts meta.definition.property",
				"source.ts meta.indexer.declaration variable.parameter.ts"

			],
			"settings": {
				"foreground": "#FFFDD0",
			}
		},
		{
			"name": "primitive & builtin types",
			"scope": [
				"source.ts support.type.primitive",
				"source.ts support.type.builtin"
			],
			"settings": {
				"foreground": "#00C79F",
			}
		},

		// Comments color
		{
			"name": "Comments",
			"scope": "comment",
			"settings": {
				"foreground": "#7f848e",
				"fontStyle": "italic"
			}
		}
		
	],
	"semanticHighlighting": true,
	"semanticTokenColors": {
		"variable.local.declaration:javascript": "#FFFDD0",
		"variable.local.readonly:javascript": "#FFFDD0",
		"variable.defaultLibrary:javascript": "#ED9067",
		"property.declaration:javascript": "#EAD5AA",
		"function.local:javascriptreact": "#D5AC84",
		"variable.local:javascriptreact": "#FFFDD0",
		"variable.defaultLibrary:javascriptreact": "#ED9067",
		"type.defaultLibrary:typescript": "#89DDFF",
		"property.defaultLibrary:typescript": "#A5D4A0",
		"function.local:typescriptreact": "#D5AC84",
		"variable.local:typescriptreact": "#FFFDD0",
		"variable.defaultLibrary:typescriptreact": "#ED9067",
		"class.defaultLibrary": "#ff6962",
	}
}
